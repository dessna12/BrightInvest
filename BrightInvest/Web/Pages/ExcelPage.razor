@page "/excel-module"
@using BrightInvest.Application.Services.Excel
@using BrightInvest.Web.Services

@inject NavigationManager Navigation
@inject CustomHttpClientService CustomHttpClientService
@inject ExcelService ExcelService


<PageTitle>Excel</PageTitle>


<MudCard>
    <MudCardContent>
        <MudText Typo="Typo.h5">Upload Excel File</MudText>
        <InputFile OnChange="HandleFileUpload" accept=".xlsx" />
        <MudButton OnClick="ProcessFile" Disabled="@(_selectedFile == null)">Process File</MudButton>

        @if (_isProcessing)
        {
            <MudProgressCircular Indeterminate="true" />
        }
    </MudCardContent>
</MudCard>

@code {
    private IBrowserFile? _selectedFile;
    private bool _isProcessing = false;

    private async Task HandleFileUpload(InputFileChangeEventArgs e)
    {
        _selectedFile = e.File;
    }

    private async Task ProcessFile()
    {
        if (_selectedFile == null)
            return;

        _isProcessing = true;

        await using var stream = _selectedFile.OpenReadStream();
        var assetsCreateDto = await ExcelService.ReadAssetsFromExcelAsync(stream);

        var httpClient = CustomHttpClientService.GetHttpClient();
        foreach (var assetCreateDto in assetsCreateDto)
        {
            var response = await httpClient.PostAsJsonAsync("api/assets", assetCreateDto);
        }

        _isProcessing = false;
        StateHasChanged();
    }
}