@page "/asset-prices"
@using BrightInvest.Application.DTOs.AssetPrices
@using BrightInvest.Web.Services
@using MudBlazor
@inject NavigationManager Navigation
@inject CustomHttpClientService CustomHttpClientService

<PageTitle>Assets</PageTitle>

<h3>Fetch Asset Prices</h3>

<div>

    <MudButton Variant="Variant.Filled" Color="Color.Primary">
        Click Me!
    </MudButton>
    <label>Enter Asset Symbol:</label>
    <input @bind="symbol" placeholder="e.g. AAPL" />
    <button @onclick="FetchPrices">Fetch Prices</button>
</div>

@if (assetPrices != null && assetPrices.Any())
{
    <table>
        <thead>
            <tr>
                <th>Date</th>
                <th>Close Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var price in assetPrices)
            {
                <tr>
                    <td>@price.Date.ToShortDateString()</td>
                    <td>@price.ClosePrice.ToString("C")</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private string symbol = "";
    private List<AssetPriceDto> assetPrices = new();

    private async Task FetchPrices()
    {
        if (string.IsNullOrWhiteSpace(symbol)) return;

        try
        {
            var httpClient = CustomHttpClientService.GetHttpClient();
            assetPrices = await httpClient.GetFromJsonAsync<List<AssetPriceDto>>($"api/asset-prices/ticker/{symbol}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching prices: {ex.Message}");
        }
    }
}

}
