@startuml
title BrightInvest Architecture Sequence - POST /portfolio

actor Client

box "Presentation Layer" #lightblue
    participant "PortfolioController" as Controller
end box

box "Application Layer" #lightgreen
    participant "PortfolioUseCase" as UseCase
    participant "IValidator" as IValidator
    participant "PortfolioDTO" as DTO
end box

box "Domain Layer" #lightyellow
    participant "IPortfolioRepository" as IRepository
    participant "PortfolioEntity" as Entity
end box

box "Infrastructure Layer" #lightcoral
    participant "PortfolioRepository" as Repository
    database "SQL Database" as Database
end box

Client -> Controller: POST /portfolio (JSON Payload)
activate Controller

Controller -> IValidator: Validate request
activate IValidator
IValidator -> Controller: Validation Result
deactivate IValidator

alt Validation Success
    Controller -> UseCase: Execute(request)
    activate UseCase

    UseCase -> DTO: Convert request to DTO
    DTO --> UseCase: Return DTO

    UseCase -> Entity: Map DTO to PortfolioEntity
    Entity --> UseCase: Return PortfolioEntity

    UseCase -> IRepository: SavePortfolio(PortfolioEntity)
    activate IRepository
    IRepository -> Repository: Persist entity
    activate Repository
    Repository -> Database: INSERT INTO portfolios
    Database --> Repository: Acknowledge Save
    Repository --> IRepository: Return saved PortfolioEntity
    deactivate Repository

    IRepository --> UseCase: Return saved PortfolioEntity
    deactivate IRepository

    UseCase -> DTO: Convert Entity to DTO
    DTO --> UseCase: Return DTO
    deactivate DTO

    UseCase --> Controller: Return PortfolioDTO
    deactivate UseCase

    Controller --> Client: Return PortfolioDTO (201 Created)
    deactivate Controller
else Validation Failure
    Controller --> Client: Return Error (400 Bad Request)
    deactivate Controller
end

@enduml
